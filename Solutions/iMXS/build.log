Microsoft (R) Build Engine バージョン 12.0.31101.0
[Microsoft .NET Framework、バージョン 4.0.30319.18408]
Copyright (C) Microsoft Corporation. All rights reserved.

2015/04/13 16:53:16 にビルドを開始しました。
ノード 1 上のプロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\dotNetMF.proj" (build ターゲット)。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\dotNetMF.proj" (1) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Executable NativeSample - rule is BuildAXF;BuildSigFiles
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Crypto\dotNetMF.proj" (3) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Custom Crypto - rule is CryptoLib
プロジェクト "G:\MicroFrameworkPK_v4_3\Crypto\dotNetMF.proj" (3) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\PK.proj" (4) をビルドしています (Build ターゲット)。
プロジェクト "G:\MicroFrameworkPK_v4_3\PK.proj" (4) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (5) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj;
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (5) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks\BuildTasks.csproj" (6) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks\BuildTasks.csproj;
CoreResGen:
  古いリソースは、それらのソース ファイルに対して存在しません。リソース生成を省略します。
GenerateTargetFrameworkMonikerAttribute:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "GenerateTargetFrameworkMonikerAttribute" を省略します。
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Tasks#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Tasks#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\Microsoft.SPOT.Tasks_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  BuildTasks -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\Microsoft.SPOT.Tasks.dll
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks\BuildTasks.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (5) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasksNativeBuild\NativeBuildTasks.csproj" (7) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasksNativeBuild\NativeBuildTasks.csproj;
GenerateTargetFrameworkMonikerAttribute:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "GenerateTargetFrameworkMonikerAttribute" を省略します。
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Tasks.NativeBuild#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Tasks.NativeBuild#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\Microsoft.SPOT.Tasks.NativeBuild_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  NativeBuildTasks -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\Microsoft.SPOT.Tasks.NativeBuild.dll
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasksNativeBuild\NativeBuildTasks.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (5) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Tools\CreateSymdef\CreateSymdef.csproj" (8) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Tools\CreateSymdef\CreateSymdef.csproj;
GenerateTargetFrameworkMonikerAttribute:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "GenerateTargetFrameworkMonikerAttribute" を省略します。
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#CreateSymdef#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#CreateSymdef#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\CreateSymdef_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  CreateSymdef -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\CreateSymdef.exe
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\CreateSymdef\CreateSymdef.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\PK.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Crypto\dotNetMF.proj" (3) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Crypto\stubs\dotnetmf.proj" (10) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Crypto_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Crypto\stubs\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
CryptoLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CryptoLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Crypto\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Common\GlobalLock\dotNetMF.proj" (11) をビルドしています (Build ターゲット)。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Common\GlobalLock\dotNetMF.proj" (11) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Common\GlobalLock\gcc\dotNetMF.proj" (12) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library GlobalLock_hal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Common\GlobalLock\gcc\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Common\GlobalLock\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\cores\arm\dotNetMF.proj" (13) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library TinyHal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\cores\arm\dotNetMF.proj" (13) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\cores\arm\dotNetMF_loader.proj" (14) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library TinyHal_loader - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\cores\arm\dotNetMF_loader.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\cores\arm\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_PreStackInit\dotNetMF.proj" (15) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_PreStackInit - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_PreStackInit\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Processors\ARM9\Bootstrap\dotNetMF.proj" (16) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library ARM9_bootstrap - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Processors\ARM9\Bootstrap\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Processors\ARM9\CACHE\dotNetMF.proj" (17) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library ARM9_cache - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Processors\ARM9\CACHE\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Processors\ARM9\MMU\dotNetMF.proj" (18) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library ARM9_mmu - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Processors\ARM9\MMU\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Initialization\dotNetMF.proj" (19) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library system_initialization_hal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Initialization\dotNetMF.proj" (19) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Initialization\dotNetMF_loader.proj" (20) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library system_initialization_hal_loader - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Initialization\dotNetMF_loader.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Initialization\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\AsyncProcCall\dotNetMF.proj" (21) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library asyncproccall_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\AsyncProcCall\dotNetMF.proj" (21) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\AsyncProcCall\Stubs\dotNetMF.proj" (22) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library asyncproccall_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\AsyncProcCall\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\AsyncProcCall\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\BlockStorage\dotNetMF.proj" (23) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library blockstorage_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\BlockStorage\dotNetMF.proj" (23) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\BlockStorage\Stubs\dotNetMF.proj" (24) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library blockstorage_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\BlockStorage\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\BlockStorage\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Watchdog\stubs\dotNetMF.proj" (25) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Watchdog_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Watchdog\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Buttons\dotNetMF.proj" (26) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Buttons_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Buttons\dotNetMF.proj" (26) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Buttons\Stubs\dotNetMF.proj" (27) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library Buttons_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Buttons\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Buttons\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\dotNetMF.proj" (28) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library COM_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\dotNetMF.proj" (28) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\i2c\dotNetMF.proj" (29) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library i2c_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\i2c\dotNetMF.proj" (29) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\i2c\Stubs\dotNetMF.proj" (30) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library i2c_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\i2c\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\i2c\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\dotNetMF.proj" (28) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\sockets\dotNetMF.proj" (31) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library sockets_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\sockets\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\dotNetMF.proj" (28) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\usart\dotNetMF.proj" (32) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library usart_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\usart\dotNetMF.proj" (32) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\usart\Stubs\dotNetMF.proj" (33) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library usart_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\usart\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\usart\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\dotNetMF.proj" (28) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\usb\dotNetMF.proj" (34) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library usb_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\usb\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\dotNetMF.proj" (28) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\stubs\dotNetMF.proj" (35) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library COM_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\Config\dotnetmf.proj" (36) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library DebuggerPort_SSL_Config_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\Config\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_i2c\dotNetMF.proj" (37) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_I2C - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_i2c\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\Sockets\stubs\dotNetMF.proj" (38) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library sockets_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\Sockets\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\USB\dotnetmf.proj" (39) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library usb_pal_config_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\USB\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Configuration\dotNetMF.proj" (40) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library config_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Configuration\dotNetMF.proj" (40) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Configuration\Stubs\dotNetMF.proj" (41) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library config_pal_Stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Configuration\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Configuration\dotNetMF.proj" (40) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Configuration\dotNetMF_loader.proj" (42) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library config_pal_loader - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Configuration\dotNetMF_loader.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Configuration\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Events\dotNetMF.proj" (43) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library events_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Events\dotNetMF.proj" (43) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Events\Stubs\dotNetMF.proj" (44) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library events_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Events\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Events\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\fs\stubs\dotNetMF.proj" (45) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library fs_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\fs\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Ink\stubs\dotNetMF.proj" (46) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Ink_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Ink\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Time\dotNetMF.proj" (47) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Time_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Time\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Gesture\stubs\dotNetMF.proj" (48) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Gesture_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Gesture\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\palevent\stubs\dotNetMF.proj" (49) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library palevent_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\palevent\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Heap\dotNetMF.proj" (50) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library heap_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Heap\dotNetMF.proj" (50) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Heap\Stubs\dotNetMF.proj" (51) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library heap_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Heap\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Heap\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Piezo\stubs\dotNetMF.proj" (52) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library piezo_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Piezo\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleHeap\stubs\dotNetMF.proj" (53) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SimpleHeap_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleHeap\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleHeap_config\Stubs\dotNetMF.proj" (54) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SimpleHeap_config_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleHeap_config\Stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\devicecode\pal\TinyCRT\dotNetMF.proj" (55) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library tinycrt_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\devicecode\pal\TinyCRT\dotNetMF.proj" (55) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\devicecode\pal\TinyCRT\Stubs\dotNetMF.proj" (56) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library tinycrt_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\devicecode\pal\TinyCRT\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\devicecode\pal\TinyCRT\dotNetMF.proj" (55) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\devicecode\pal\TinyCRT\dotNetMF_loader.proj" (57) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library tinycrt_pal_loader - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\devicecode\pal\TinyCRT\dotNetMF_loader.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\devicecode\pal\TinyCRT\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_Bootstrap\dotNetMF.proj" (58) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_bootstrap - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_Bootstrap\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_cache\dotNetMF.proj" (59) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_cache - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_cache\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_cmu\dotNetMF.proj" (60) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_CMU - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_cmu\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_DMA\dotNetMF.proj" (61) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_DMA - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_DMA\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_EBIU\dotNetMF.proj" (62) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_EBIU - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_EBIU\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_GPIO\dotNetMF.proj" (63) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_GPIO - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_GPIO\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_INTC\dotNetMF.proj" (64) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_INTC - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_INTC\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_LCD\dotNetMF.proj" (65) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_LCD - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_LCD\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_power\dotNetMF.proj" (66) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_Power - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_power\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_spi\dotNetMF.proj" (67) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_SPI - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_spi\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_TIMER\dotNetMF.proj" (68) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_timer - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_TIMER\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_time\dotNetMF.proj" (69) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_time - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_time\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_USART\dotNetMF.proj" (70) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_USART - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_USART\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_USb\dotNetMF.proj" (71) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_USB - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_USb\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_Watchdog\dotNetMF.proj" (72) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_Watchdog - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_Watchdog\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Blockstorage\addDevices\dotNetMF.proj" (73) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library BlockStorage_AddDevices_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Blockstorage\addDevices\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\FS\dotnetmf.proj" (74) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library FS_Config_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\FS\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Support\CRC\dotNetMF.proj" (75) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library CRC - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Support\CRC\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Support\WireProtocol\dotNetMF.proj" (76) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library WireProtocol - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Support\WireProtocol\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Test\native\src\dotnetmf.proj" (77) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Native - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Test\native\src\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\TimeService\stubs\dotNetMF.proj" (78) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library TimeService_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\TimeService\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\BatteryCharger\stubs\dotNetMF.proj" (79) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library batterycharger_hal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\BatteryCharger\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\BatteryMeasurement\stubs\dotNetMF.proj" (80) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library batterymeasurement_hal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\BatteryMeasurement\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Backlight\SPI\dotNetMF.proj" (81) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library spi_backlight - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Backlight\SPI\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Backlight\SPI\dotnetmf.proj" (82) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPI_Backlight_Config_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Backlight\SPI\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\BlockStorage\Flash\I28F_16\dotNetMF.proj" (83) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library I28F_16BL - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\BlockStorage\Flash\I28F_16\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Blockstorage\I28F640J3_16\dotNetMF.proj" (84) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library I28F640J3_blconfig_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Blockstorage\I28F640J3_16\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Display\A025DL02\dotNetMF.proj" (85) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library A025DL02 - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Display\A025DL02\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Display\LCDController\dotnetmf.proj" (86) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library LCDController_Config_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Display\LCDController\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Display\A025DL02\dotnetmf.proj" (87) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library A025DL02_Config_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Display\A025DL02\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Display\TextFonts\Font8x8\dotNetMF.proj" (88) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Display_Font8x8 - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Display\TextFonts\Font8x8\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
BuildScatterfile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildScatterfile" を省略します。
BuildAXF:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildAXF" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\NativeSample\NativeSample.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\dotNetMF.proj" (1) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\PortBooter\portBooter.proj" (89) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Executable PortBooter - rule is BuildAXF;BuildSigFiles;CompressBin
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
BuildScatterfile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildScatterfile" を省略します。
BuildAXF:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildAXF" を省略します。
CompressBin:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CompressBin" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\PortBooter\portBooter.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\dotNetMF.proj" (1) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\PortBooter\portBooterloader.proj" (90) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Executable PortBooterLoader - rule is BuildAXF;BuildSigFiles
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
BuildScatterfile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildScatterfile" を省略します。
BuildAXF:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildAXF" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\PortBooter\portBooterloader.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\dotNetMF.proj" (1) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyBooter\TinyBooter.proj" (91) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Executable Tinybooter - rule is BuildAXF;BuildSigFiles;CompressBin
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyBooter\TinyBooter.proj" (91) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Application\TinyBooter\TinyBooterLib.proj" (92) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library TinybooterLib - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Application\TinyBooter\TinyBooterLib.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyBooter\TinyBooter.proj" (91) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleHeap\dotNetMF.proj" (93) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SimpleHeap - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleHeap\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyBooter\TinyBooter.proj" (91) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Backlight\stubs\dotNetMF.proj" (94) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library backlight_hal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Backlight\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
BuildScatterfile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildScatterfile" を省略します。
BuildAXF:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildAXF" を省略します。
CompressBin:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CompressBin" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyBooter\TinyBooter.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\dotNetMF.proj" (1) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyBooter\TinyBooterDecompressor.proj" (95) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Executable TinyBooterDecompressor - rule is BuildAXF;BuildSigFiles
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyBooter\TinyBooterDecompressor.proj" (95) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Application\TinyBooter\TinyBooterDecompressorLib.proj" (96) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library TinyBooterDecompressorLib - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Application\TinyBooter\TinyBooterDecompressorLib.proj" (Build ターゲット) のビルドが完了しました。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmAssemble:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmAssemble" を省略します。
BuildScatterfile:
  ...
Processing file: scatterfile_bootloader_decompressor_GCC.xml
Processing file: G:\MicroFrameworkPK_v4_3\Solutions\iMXS\scatterfile_gcc_missing_symbols.xml
BuildAXF:
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\ld.exe"  -static --gc-sections --no-warn-mismatch --library-path=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\lib --library-path=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib   -u ARM_Vectors -u _start --Map G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.map --output=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.axf --script=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor_scatterfile.ldf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyBooter\BooterVectorTable.obj G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyBooter\TinyBooter_dat.obj -( G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\TinyBooterDecompressorLib.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\CRC.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\WireProtocol.lib Crypto.lib GlobalLock_hal.lib TinyHal_loader.lib ARM9_bootstrap.lib ARM9_cache.lib ARM9_mmu.lib system_initialization_hal_loader.lib asyncproccall_pal.lib blockstorage_pal.lib Watchdog_pal_stubs.lib Buttons_pal.lib COM_pal_stubs.lib i2c_pal.lib MC9328MXL_I2C.lib sockets_pal_stubs.lib usart_pal.lib usb_pal.lib usb_pal_config_iMXS.lib config_pal_loader.lib events_pal.lib fs_pal_stubs.lib heap_pal.lib piezo_pal_stubs.lib SimpleHeap_stubs.lib SimpleHeap_config_stubs.lib tinycrt_pal_loader.lib Ink_pal_stubs.lib Gesture_pal_stubs.lib palevent_pal_stubs.lib Time_pal.lib MC9328MXL_bootstrap.lib MC9328MXL_cache.lib MC9328MXL_CMU.lib MC9328MXL_DMA.lib MC9328MXL_EBIU.lib MC9328MXL_GPIO.lib MC9328MXL_INTC.lib MC9328MXL_LCD.lib MC9328MXL_Power.lib MC9328MXL_PreStackInit.lib MC9328MXL_SPI.lib MC9328MXL_timer.lib MC9328MXL_time.lib MC9328MXL_USART.lib MC9328MXL_USB.lib MC9328MXL_Watchdog.lib BlockStorage_AddDevices_iMXS.lib FS_Config_iMXS.lib TimeService_pal_stubs.lib batterycharger_hal_stubs.lib batterymeasurement_hal_stubs.lib backlight_hal_stubs.lib I28F_16BL.lib I28F640J3_blconfig_iMXS.lib A025DL02.lib LCDController_Config_iMXS.lib A025DL02_Config_iMXS.lib Display_Font8x8.lib   -) -( "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\arm-none-eabi\lib\libm.a" "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\arm-none-eabi\lib\libc.a" "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\lib\gcc\arm-none-eabi\4.8.3\libgcc.a" -) -(  -)
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objdump.exe" -d -EL G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.axf > G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.axfdump
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_FLASH -j ER_IRAM_TC -j ER_FLASH_CONT -j ER_RAM_RO -j ER_RAM_RW  -O binary G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.bin
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_FLASH -j ER_IRAM_TC -j ER_FLASH_CONT -j ER_RAM_RO -j ER_RAM_RW  -j ER_IRAM -O srec --gap-fill 0 --srec-forceS3  G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.hex
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\nm.exe" G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.axf >> G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.dump
  G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\CreateSymdef.exe     G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.dump G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\TinyBooterDecompressor.symdefs
  Done !
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyBooter\TinyBooterDecompressor.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\dotNetMF.proj" (1) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Executable tinyclr - rule is BuildAXF;BuildSigFiles
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Core - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\HeapPersistence\dotNetMF.proj" (99) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library HeapPersistence - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\HeapPersistence\dotNetMF.proj" (99) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\HeapPersistence\dotNetMF_Stub.proj" (100) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library HeapPersistence_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\HeapPersistence\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\HeapPersistence\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\I2C\dotNetMF.proj" (101) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library I2C - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\I2C\dotNetMF.proj" (101) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\I2C\dotNetMF_Stub.proj" (102) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library I2C_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\I2C\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\I2C\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\IOPort\dotNetMF.proj" (103) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library IOPort - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\IOPort\dotNetMF.proj" (103) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\IOPort\dotNetMF_Stub.proj" (104) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library IOPort_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\IOPort\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\IOPort\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\RPC\dotNetMF.proj" (105) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library RPC - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\RPC\dotNetMF.proj" (105) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\RPC\dotNetMF_Stub.proj" (106) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library RPC_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\RPC\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\RPC\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Serialization\dotNetMF.proj" (107) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library Serialization - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Serialization\dotNetMF.proj" (107) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Serialization\dotNetMF_Stub.proj" (108) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Serialization_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Serialization\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Serialization\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Stream\dotNetMF.proj" (109) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library Stream - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Stream\dotNetMF.proj" (109) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Stream\dotNetMF_Stub.proj" (110) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Stream_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Stream\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Stream\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\dotNetMF.proj" (111) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library Hardware - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\dotNetMF.proj" (111) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\InterruptHandler\dotNetMF.proj" (112) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library InterruptHandler - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\InterruptHandler\dotNetMF.proj" (112) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\InterruptHandler\dotNetMF_Stub.proj" (113) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library InterruptHandler_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\InterruptHandler\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\InterruptHandler\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\dotNetMF.proj" (111) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\dotNetMF_Stub.proj" (114) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Hardware_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Hardware\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (98) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Xml\dotNetMF.proj" (115) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library Xml - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Xml\dotNetMF.proj" (115) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Core\Xml\dotNetMF_Stub.proj" (116) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Xml_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Xml\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\Xml\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Core\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\StartupLib\dotnetmf.proj" (117) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library CLRStartup - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\StartupLib\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\CorLib\dotnetmf.proj" (118) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library CorLib - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\CorLib\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\dotnetmf.proj" (119) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\dotnetmf.proj" (119) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Messaging\dotNetMF.proj" (120) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library SPOT_Messaging - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Messaging\dotNetMF.proj" (120) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Messaging\dotNetMF_Stub.proj" (121) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Messaging_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Messaging\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Messaging\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\dotnetmf.proj" (119) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Serialization\dotNetMF.proj" (122) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library SPOT_Serialization - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Serialization\dotNetMF.proj" (122) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Serialization\dotNetMF_Stub.proj" (123) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Serialization_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Serialization\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\SPOT_Serialization\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SecurityPkcs11\dotNetMF.proj" (124) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SecurityPkcs11 - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SecurityPkcs11\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_OneWire\dotNetMF.proj" (125) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware_OneWire - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_OneWire\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\pal\OneWire\dotNetMF.proj" (126) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library onewire_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\pal\OneWire\dotNetMF.proj" (126) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\pal\OneWire\Stubs\dotNetMF.proj" (127) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library onewire_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\pal\OneWire\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\pal\OneWire\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\MyInterops\MyFirstLibrary\NativeCode\dotNetMF.proj" (128) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MyFirstLibrary - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\MyInterops\MyFirstLibrary\NativeCode\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\clr\core\InteropAssembliesTable.proj" (129) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library InteropAssembliesTable - rule is ArmBuildLib
GenerateInteropTable:
  Generating G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\CLR_RT_InteropAssembliesTable.cpp
プロジェクト "G:\MicroFrameworkPK_v4_3\clr\core\InteropAssembliesTable.proj" (129) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\PK.proj" (4:122) をビルドしています (Build ターゲット)。
プロジェクト "G:\MicroFrameworkPK_v4_3\PK.proj" (4:122) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (5:2) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj;
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (5:2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks\BuildTasks.csproj" (6:2) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks\BuildTasks.csproj;
CoreResGen:
  古いリソースは、それらのソース ファイルに対して存在しません。リソース生成を省略します。
GenerateTargetFrameworkMonikerAttribute:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "GenerateTargetFrameworkMonikerAttribute" を省略します。
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Tasks#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Tasks#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\Microsoft.SPOT.Tasks_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  BuildTasks -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\Microsoft.SPOT.Tasks.dll
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks\BuildTasks.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (5:2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasksNativeBuild\NativeBuildTasks.csproj" (7:2) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasksNativeBuild\NativeBuildTasks.csproj;
GenerateTargetFrameworkMonikerAttribute:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "GenerateTargetFrameworkMonikerAttribute" を省略します。
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Tasks.NativeBuild#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Tasks.NativeBuild#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\Microsoft.SPOT.Tasks.NativeBuild_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  NativeBuildTasks -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\Microsoft.SPOT.Tasks.NativeBuild.dll
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasksNativeBuild\NativeBuildTasks.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (5:2) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Tools\CreateSymdef\CreateSymdef.csproj" (8:2) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Tools\CreateSymdef\CreateSymdef.csproj;
GenerateTargetFrameworkMonikerAttribute:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "GenerateTargetFrameworkMonikerAttribute" を省略します。
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#CreateSymdef#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#CreateSymdef#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\CreateSymdef_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  CreateSymdef -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\CreateSymdef.exe
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\CreateSymdef\CreateSymdef.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Tools\BuildTasks.dirproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\PK.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
  del /q  G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\lib\InteropAssembliesTable.lib
  del /q  G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\lib\InteropAssembliesTable.lib.manifest
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
   "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\arm-none-eabi-gcc.exe" -xc++ -Wno-invalid-offsetof -fcheck-new  -fno-default-inline  -mabi=aapcs -ffunction-sections -fomit-frame-pointer -mlong-calls -fdollars-in-identifiers -fshort-wchar -fno-exceptions  -funsigned-char -mstructure-size-boundary=8 -DTINYCLR_ENABLE_SOURCELEVELDEBUGGING  -DCOMPILE_ARM  -DVERSION_MAJOR=4 -DVERSION_MINOR=3 -DVERSION_BUILD=0 -DVERSION_REVISION=0 -DOEMSYSTEMINFOSTRING="\"Microsoft Copyright (C) Microsoft Corporation.  All rights reserved.\"" -DPLATFORM_ARM_MC9328 -DPLATFORM_ARM_iMXS -DTARGETLOCATION_FLASH -DLITTLE_ENDIAN -DGCC      -mfloat-abi=soft   -mcpu=arm920t -mlittle-endian  -g1 -Os -DNDEBUG  -IG:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR -IG:\MicroFrameworkPK_v4_3\DeviceCode\include -IG:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm -IG:\MicroFrameworkPK_v4_3\Support\Include   -IG:\MicroFrameworkPK_v4_3\crypto\inc  -IG:\MicroFrameworkPK_v4_3\CLR\Include -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\CorLib -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Graphics -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Net -ID:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\lib\gcc\arm-none-eabi\4.8.3\include -IG:\MicroFrameworkPK_v4_3\Solutions\iMXS -IG:\MicroFrameworkPK_v4_3\devicecode\Targets\Native\MC9328 -IG:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm -IG:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Include -IG:\MicroFrameworkPK_v4_3\DeviceCode -IG:\MicroFrameworkPK_v4_3\DeviceCode\Include -IG:\MicroFrameworkPK_v4_3\CLR\Include -IG:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\iMXS -IG:\MicroFrameworkPK_v4_3\Support\Include -IG:\MicroFrameworkPK_v4_3\DeviceCode\include -IG:\MicroFrameworkPK_v4_3\CLR\include -IG:\MicroFrameworkPK_v4_3\Crypto\inc   -Wabi   -o G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\CLR_RT_InteropAssembliesTable.obj -c G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\CLR_RT_InteropAssembliesTable.cpp  
  In file included from G:\MicroFrameworkPK_v4_3\CLR\Include/TinyCLR_Interop.h:8:0,
                   from G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\CLR_RT_InteropAssembliesTable.cpp:5:
  G:\MicroFrameworkPK_v4_3\DeviceCode\include/tinyhal.h:88:0: warning: "__section" redefined [enabled by default]
   #define __section(x) __attribute__((section(#x)))
   ^
  In file included from d:\users\v050493\mentorgraphics\sourcery_codebench_lite_for_arm_eabi\arm-none-eabi\include\string.h:12:0,
                   from G:\MicroFrameworkPK_v4_3\DeviceCode\include/tinyhal.h:11,
                   from G:\MicroFrameworkPK_v4_3\CLR\Include/TinyCLR_Interop.h:8,
                   from G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\CLR_RT_InteropAssembliesTable.cpp:5:
  d:\users\v050493\mentorgraphics\sourcery_codebench_lite_for_arm_eabi\lib\gcc\arm-none-eabi\4.8.3\include-fixed\sys\cdefs.h:244:0: note: this is the location of the previous definition
   #define __section(x) __attribute__((__section__(x)))
   ^
   "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\arm-none-eabi-gcc.exe" -xc++ -Wno-invalid-offsetof -fcheck-new  -fno-default-inline  -mabi=aapcs -ffunction-sections -fomit-frame-pointer -mlong-calls -fdollars-in-identifiers -fshort-wchar -fno-exceptions  -funsigned-char -mstructure-size-boundary=8 -DTINYCLR_ENABLE_SOURCELEVELDEBUGGING  -DCOMPILE_ARM  -DVERSION_MAJOR=4 -DVERSION_MINOR=3 -DVERSION_BUILD=0 -DVERSION_REVISION=0 -DOEMSYSTEMINFOSTRING="\"Microsoft Copyright (C) Microsoft Corporation.  All rights reserved.\"" -DPLATFORM_ARM_MC9328 -DPLATFORM_ARM_iMXS -DTARGETLOCATION_FLASH -DLITTLE_ENDIAN -DGCC      -mfloat-abi=soft   -mcpu=arm920t -mlittle-endian  -g1 -Os -DNDEBUG  -IG:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR -IG:\MicroFrameworkPK_v4_3\DeviceCode\include -IG:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm -IG:\MicroFrameworkPK_v4_3\Support\Include   -IG:\MicroFrameworkPK_v4_3\crypto\inc  -IG:\MicroFrameworkPK_v4_3\CLR\Include -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\CorLib -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Graphics -IG:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Net -ID:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\lib\gcc\arm-none-eabi\4.8.3\include -IG:\MicroFrameworkPK_v4_3\Solutions\iMXS -IG:\MicroFrameworkPK_v4_3\devicecode\Targets\Native\MC9328 -IG:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm -IG:\MicroFrameworkPK_v4_3\DeviceCode\Cores\arm\Include -IG:\MicroFrameworkPK_v4_3\DeviceCode -IG:\MicroFrameworkPK_v4_3\DeviceCode\Include -IG:\MicroFrameworkPK_v4_3\CLR\Include -IG:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\iMXS -IG:\MicroFrameworkPK_v4_3\Support\Include -IG:\MicroFrameworkPK_v4_3\DeviceCode\include -IG:\MicroFrameworkPK_v4_3\CLR\include -IG:\MicroFrameworkPK_v4_3\Crypto\inc   -Wabi   -o G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\CLR_RT_RuntimeMemory.obj -c G:\MicroFrameworkPK_v4_3\CLR\Core\CLR_RT_RuntimeMemory.cpp  
  In file included from G:\MicroFrameworkPK_v4_3\CLR\Include/TinyCLR_Interop.h:8:0,
                   from G:\MicroFrameworkPK_v4_3\CLR\Core\CLR_RT_RuntimeMemory.cpp:5:
  G:\MicroFrameworkPK_v4_3\DeviceCode\include/tinyhal.h:88:0: warning: "__section" redefined [enabled by default]
   #define __section(x) __attribute__((section(#x)))
   ^
  In file included from d:\users\v050493\mentorgraphics\sourcery_codebench_lite_for_arm_eabi\arm-none-eabi\include\string.h:12:0,
                   from G:\MicroFrameworkPK_v4_3\DeviceCode\include/tinyhal.h:11,
                   from G:\MicroFrameworkPK_v4_3\CLR\Include/TinyCLR_Interop.h:8,
                   from G:\MicroFrameworkPK_v4_3\CLR\Core\CLR_RT_RuntimeMemory.cpp:5:
  d:\users\v050493\mentorgraphics\sourcery_codebench_lite_for_arm_eabi\lib\gcc\arm-none-eabi\4.8.3\include-fixed\sys\cdefs.h:244:0: note: this is the location of the previous definition
   #define __section(x) __attribute__((__section__(x)))
   ^
ArmBuildLib:
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\ar.exe"  -rcs G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\lib\InteropAssembliesTable.lib CLR_RT_InteropAssembliesTable.obj CLR_RT_RuntimeMemory.obj 
プロジェクト "G:\MicroFrameworkPK_v4_3\clr\core\InteropAssembliesTable.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\MFUpdate\stubs\dotnetMF.proj" (130) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MFUpdate_PAL_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\MFUpdate\stubs\dotnetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Crypto\dotnetmf.proj" (131) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Crypto_config_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\Crypto\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\PKCS11\dotNetMF.proj" (132) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library PKCS11_Engine - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\PKCS11\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\Sockets\OpenSSL\stubs\dotNetMF.proj" (133) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library openssl_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\COM\Sockets\OpenSSL\stubs\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\TinyCLR\dotNetMF.proj" (134) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library ssl_types - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\TinyCLR\dotNetMF.proj" (134) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\pal\OpenSSL\OpenSSL_1_0_0\ssl\dotNetMF.proj" (135) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library libssl_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\pal\OpenSSL\OpenSSL_1_0_0\ssl\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\TinyCLR\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library crypto_openssl - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\aes\dotNetMF.proj" (137) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library aes_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\aes\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\asn1\dotNetMF.proj" (138) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library asn1_openssl - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\asn1\dotNetMF.proj" (138) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\asn1\dotnetmf2.proj" (139) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library asn1pt2_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\asn1\dotnetmf2.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\asn1\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\bf\dotNetMF.proj" (140) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library bf_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\bf\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\bio\dotNetMF.proj" (141) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library bio_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\bio\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\bn\dotNetMF.proj" (142) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library bn_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\bn\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\buffer\dotNetMF.proj" (143) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library buffer_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\buffer\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\cast\dotNetMF.proj" (144) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library cast_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\cast\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\comp\dotNetMF.proj" (145) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library comp_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\comp\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\conf\dotNetMF.proj" (146) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library conf_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\conf\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\des\dotNetMF.proj" (147) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library des_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\des\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dh\dotNetMF.proj" (148) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library dh_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dh\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dsa\dotNetMF.proj" (149) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library dsa_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dsa\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dso\dotNetMF.proj" (150) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library dso_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dso\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ec\dotNetMF.proj" (151) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library ec_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ec\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ecdh\dotNetMF.proj" (152) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library ecdh_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ecdh\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ecdsa\dotNetMF.proj" (153) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library ecdsa_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ecdsa\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\engine\dotNetMF.proj" (154) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library engine_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\engine\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\err\dotNetMF.proj" (155) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library err_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\err\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\evp\dotNetMF.proj" (156) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library evp_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\evp\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\hmac\dotNetMF.proj" (157) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library hmac_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\hmac\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\lhash\dotNetMF.proj" (158) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library lhash_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\lhash\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\md2\dotNetMF.proj" (159) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library md2_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\md2\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\md4\dotNetMF.proj" (160) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library md4_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\md4\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\md5\dotNetMF.proj" (161) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library md5_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\md5\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\modes\dotNetMF.proj" (162) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library modes_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\modes\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\objects\dotNetMF.proj" (163) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library objects_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\objects\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ocsp\dotNetMF.proj" (164) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library ocsp_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ocsp\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\pem\dotNetMF.proj" (165) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library pem_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\pem\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\pkcs7\dotNetMF.proj" (166) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library pkcs7_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\pkcs7\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\pkcs12\dotNetMF.proj" (167) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library pkcs12_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\pkcs12\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\pqueue\dotNetMF.proj" (168) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library pqueue_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\pqueue\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\rand\dotNetMF.proj" (169) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library rand_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\rand\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\rc2\dotNetMF.proj" (170) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library rc2_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\rc2\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\rc4\dotNetMF.proj" (171) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library rc4_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\rc4\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ripemd\dotNetMF.proj" (172) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library ripemd_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ripemd\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\rsa\dotNetMF.proj" (173) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library rsa_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\rsa\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\seed\dotNetMF.proj" (174) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library seed_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\seed\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\sha\dotNetMF.proj" (175) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library sha_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\sha\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\stack\dotNetMF.proj" (176) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library stack_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\stack\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ts\dotNetMF.proj" (177) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library ts_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ts\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\txt_db\dotNetMF.proj" (178) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library txt_db_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\txt_db\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ui\dotNetMF.proj" (179) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library ui_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\ui\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\whrlpool\dotNetMF.proj" (180) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library whrlpool_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\whrlpool\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\x509\dotNetMF.proj" (181) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library x509_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\x509\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (136) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\x509v3\dotNetMF.proj" (182) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library x509v3_openssl - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\x509v3\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\OpenSSL\OpenSSL_1_0_0\crypto\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleStorage\dotNetMF.proj" (183) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SimpleStorage_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleStorage\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\PKCS11\Tokens\OpenSSL\dotNetMF.proj" (184) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library OpenSSL_PKCS11_Crypto - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\PKCS11\Tokens\OpenSSL\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\drivers\LargeBuffer\stubs\dotnetmf.proj" (185) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library LargeBuffer_hal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\drivers\LargeBuffer\stubs\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF.proj" (186) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Debugger - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF.proj" (186) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF_extended.proj" (187) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Debugger_extended - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF_extended.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF.proj" (186) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF_full.proj" (188) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Debugger_full - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF_full.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF.proj" (186) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF_minimal.proj" (189) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Debugger_minimal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF_minimal.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF.proj" (186) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF_Stub.proj" (190) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Debugger_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Debugger\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Diagnostics\dotNetMF.proj" (191) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Diagnostics - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Diagnostics\dotNetMF.proj" (191) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Diagnostics\dotNetMF_stub.proj" (192) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Diagnostics_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Diagnostics\dotNetMF_stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Diagnostics\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Graphics\BMP\dotNetMF.proj" (193) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Graphics_Bmp - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\BMP\dotNetMF.proj" (193) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Graphics\BMP\dotNetMF_Stub.proj" (194) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Graphics_Bmp_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\BMP\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\BMP\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Graphics\dotNetMF.proj" (195) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Graphics - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\dotNetMF.proj" (195) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Jpeg\dotNetMF.proj" (196) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library Graphics_Jpeg - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Jpeg\dotNetMF.proj" (196) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Jpeg\dotNetMF_Stub.proj" (197) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Graphics_Jpeg_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Jpeg\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileC" を省略します。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Jpeg\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\dotNetMF.proj" (195) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Gif\dotNetMF.proj" (198) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library Graphics_Gif - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Gif\dotNetMF.proj" (198) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Gif\dotNetMF_Stub.proj" (199) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Graphics_Gif_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Gif\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\Gif\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\dotNetMF.proj" (195) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Graphics\dotNetMF_Stub.proj" (200) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Graphics_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Graphics\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Graphics\dotNetMF.proj" (201) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Graphics - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Graphics\dotNetMF.proj" (201) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Graphics\dotNetMF_Stub.proj" (202) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Graphics_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Graphics\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Graphics\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\dotNetMF.proj" (203) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\dotNetMF.proj" (203) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Serial\dotNetMF.proj" (204) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware_SerialPort - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Serial\dotNetMF.proj" (204) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Serial\dotNetMF_Stub.proj" (205) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware_SerialPort_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Serial\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Serial\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\dotNetMF.proj" (203) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Usb\dotNetMF.proj" (206) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware_Usb - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Usb\dotNetMF.proj" (206) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Usb\dotNetMF_Stub.proj" (207) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware_Usb_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Usb\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_Usb\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\dotNetMF.proj" (203) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_PWM\dotNetMF.proj" (208) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware_PWM - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_PWM\dotNetMF.proj" (208) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_PWM\dotNetMF_Stub.proj" (209) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware_PWM_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_PWM\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\SPOT_PWM\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\dotNetMF.proj" (203) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\dotNetMF_Stub.proj" (210) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Hardware_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Hardware\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\VirtualKey\dotnetmf.proj" (211) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library VirtualKey_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\VirtualKey\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Touch\dotnetmf.proj" (212) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Touch - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Touch\dotnetmf.proj" (212) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Touch\dotNetMF_Stub.proj" (213) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SPOT_Touch_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Touch\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\SPOT_Touch\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\System_Xml\dotNetMF.proj" (214) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library System_Xml - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\System_Xml\dotNetMF.proj" (214) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Libraries\System_Xml\dotNetMF_stub.proj" (215) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library System_Xml_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\System_Xml\dotNetMF_stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Libraries\System_Xml\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\TouchPanel\dotNetMF.proj" (216) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library TouchPanel_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\TouchPanel\dotNetMF.proj" (216) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\TouchPanel\Stubs\dotNetMF.proj" (217) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library touchpanel_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\TouchPanel\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\TouchPanel\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Watchdog\dotNetMF.proj" (218) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Watchdog_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Watchdog\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\palevent\dotNetMF.proj" (219) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library palevent_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\palevent\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Gesture\dotNetMF.proj" (220) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Gesture_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Gesture\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Ink\dotNetMF.proj" (221) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Ink_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Pal\Ink\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Messaging\dotNetMF.proj" (222) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Messaging - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Messaging\dotNetMF.proj" (222) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\CLR\Messaging\dotNetMF_Stub.proj" (223) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library Messaging_stub - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Messaging\dotNetMF_Stub.proj" (Build ターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\CLR\Messaging\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\TouchPanel\TSC2046\dotNetMF.proj" (224) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library TSC2046 - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\TouchPanel\TSC2046\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\TouchPanel\dotnetmf.proj" (225) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library TSC2046_Config_iMXS - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\DeviceCode\TouchPanel\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\FS\stubs\config\dotnetmf.proj" (226) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library FS_Config_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\FS\stubs\config\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Graphics\dotNetMF.proj" (227) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library graphics_pal - rule is ArmBuildLib
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Graphics\dotNetMF.proj" (227) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Graphics\Stubs\dotNetMF.proj" (228) をビルドしています (既定のターゲット)。
StartMessage:
  Doing build of Library graphics_pal_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Graphics\Stubs\dotNetMF.proj" (既定のターゲット) のビルドが完了しました。
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Graphics\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleHeap_config\dotNetMF.proj" (229) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library SimpleHeap_config - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\SimpleHeap_config\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_security\dotNetMF.proj" (230) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_Security - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_security\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Stubs\Processor\stubs_DA\dotnetmf.proj" (231) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library cpu_DA_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\Stubs\Processor\stubs_DA\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\stubs\Processor\stubs_PWM\dotnetmf.proj" (232) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library cpu_pwm_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\stubs\Processor\stubs_PWM\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\stubs\Processor\stubs_analog\dotnetmf.proj" (233) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library cpu_analog_stubs - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Drivers\stubs\Processor\stubs_analog\dotnetmf.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_PerformanceCounter\dotNetMF.proj" (234) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library MC9328MXL_PerformanceCounter - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\Targets\Native\MC9328\DeviceCode\MC9328MXL_PerformanceCounter\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Double\dotNetMF.proj" (235) をビルドしています (Build ターゲット)。
StartMessage:
  Doing build of Library native_double_pal - rule is ArmBuildLib
DelBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "DelBuildLib" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
CreateLibManifest:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CreateLibManifest" を省略します。
ArmBuildLib:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmBuildLib" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\DeviceCode\PAL\Double\dotNetMF.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Subset_of_CorLib\SpotCorLib.csproj" (236) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Subset_of_CorLib\SpotCorLib.csproj;
CoreResGen:
  古いリソースは、それらのソース ファイルに対して存在しません。リソース生成を省略します。
TinyResGen:
  GenerateResource.NothingOutOfDate
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#mscorlib#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#mscorlib#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\mscorlib_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  SpotCorLib -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\mscorlib.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Subset_of_CorLib\SpotCorLib.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Core\Native\Core_Native.csproj" (237) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Core\Native\Core_Native.csproj;
CoreResGen:
  古いリソースは、それらのソース ファイルに対して存在しません。リソース生成を省略します。
TinyResGen:
  GenerateResource.NothingOutOfDate
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Native#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Native#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Native_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Core_Native -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Native.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Core\Native\Core_Native.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_hardware\Core_Native_Hardware.csproj" (238) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Core\Native_hardware\Core_Native_Hardware.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Hardware#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Hardware#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Hardware_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Core_Native_Hardware -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Hardware.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_hardware\Core_Native_Hardware.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\PKCS11\SecurityPkcs11.csproj" (239) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\PKCS11\SecurityPkcs11.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Security.PKCS11#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Security.PKCS11#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Security.PKCS11_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  SecurityPkcs11 -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Security.PKCS11.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\PKCS11\SecurityPkcs11.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\core\System\System.Security.csproj" (240) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\core\System\System.Security.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#System.Security#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#System.Security#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\System.Security_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  System.Security -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\System.Security.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\core\System\System.Security.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_USB\Core_Native_Hardware_USB.csproj" (241) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_USB\Core_Native_Hardware_USB.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Hardware.Usb#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Hardware.Usb#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Hardware.Usb_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Core_Native_Hardware_USB -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Hardware.Usb.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_USB\Core_Native_Hardware_USB.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Graphics\Core_Native_Graphics.csproj" (242) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Graphics\Core_Native_Graphics.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Graphics#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Graphics#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Graphics_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Core_Native_Graphics -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Graphics.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Graphics\Core_Native_Graphics.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\TinyCore\TinyCore.csproj" (243) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\TinyCore\TinyCore.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.TinyCore#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.TinyCore#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.TinyCore_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  TinyCore -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.TinyCore.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\TinyCore\TinyCore.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Touch\Core_Touch.csproj" (244) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Touch\Core_Touch.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Touch#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Touch#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Touch_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Core_Touch -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Touch.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Touch\Core_Touch.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_UART\Core_Native_Hardware_UART.csproj" (245) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_UART\Core_Native_Hardware_UART.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Hardware.SerialPort#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Hardware.SerialPort#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Hardware.SerialPort_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Core_Native_Hardware_UART -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Hardware.SerialPort.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_UART\Core_Native_Hardware_UART.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_OneWire\Core_Native_Hardware_OneWire.csproj" (246) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_OneWire\Core_Native_Hardware_OneWire.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Hardware.OneWire#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Hardware.OneWire#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Hardware.OneWire_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Core_Native_Hardware_OneWire -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Hardware.OneWire.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\Core\Native_Hardware\Native_OneWire\Core_Native_Hardware_OneWire.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\core\System\Xml.csproj" (247) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\core\System\Xml.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#System.Xml#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#System.Xml#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\System.Xml_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Xml -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\System.Xml.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\core\System\Xml.csproj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (97) は、ノード 1 上に "G:\MicroFrameworkPK_v4_3\Framework\TinyCore\Ink.csproj" (248) をビルドしています (Build ターゲット)。
StartBuild:
  Building...G:\MicroFrameworkPK_v4_3\Framework\TinyCore\Ink.csproj;
DoAddCommonAssemblyInfo:
  cscript //Nologo G:\MicroFrameworkPK_v4_3\tools\scripts\Preprocess.js /TemplateFile:G:\MicroFrameworkPK_v4_3\tools\AssemblyInfo.cs.template /Properties:"__ASSEMBLYTITLE__=#Microsoft.SPOT.Ink#;__ASSEMBLYCOMPANY__=#Microsoft Corporation#;__ASSEMBLYCOPYRIGHT__=#Copyright (C) Microsoft Corporation.  All rights reserved.#;__ASSEMBLYDESCRIPTION__=##;__ASSEMBLYVERSION__=#4.3.0.0#;__PRODUCTVERSION__=#4.3.0.0#;__PRODUCTVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYFILEVERSION__=#4.3.0.0#;__FILEVERSION_CSV__=4, 3, 0, 0;__ASSEMBLYCONFIGURATION__=#Release#;__ASSEMBLYPRODUCT__=#Microsoft .NET Micro Framework#;__ASSEMBLYTRADEMARK__=#.NET is a trademark of Microsoft Corporation.#;__ASSEMBLYINTERNALNAME__=#Microsoft.SPOT.Ink#" /OutputFile:G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Ink_assemblyinfo.txt
CoreCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "CoreCompile" を省略します。
CopyFilesToOutputDirectory:
  Ink -> G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Client\dll\Microsoft.SPOT.Ink.dll
MetaDataProcessorCompile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompile" を省略します。
MetaDataProcessorCompileBE:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorCompileBE" を省略します。
MetaDataProcessorDump:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "MetaDataProcessorDump" を省略します。
プロジェクト "G:\MicroFrameworkPK_v4_3\Framework\TinyCore\Ink.csproj" (Build ターゲット) のビルドが完了しました。
ArmCompileCPP:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "ArmCompileCPP" を省略します。
ArmCompileC:
入力がないため、ターゲット "ArmCompileC" を省略しています。
MetaDataProcessorDat:
  G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\server\dll\MetaDataProcessor.exe -create_database C:\Users\v050493\AppData\Local\Temp\tmp63.tmp G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.dat 
TinyClrDat:
  ***************************************************************************************************
  Target: TinyClrDat with outputs G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\tinyclr_dat.obj
  Building Tinyclr.dat from the features specified in the tinyclr.proj file
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\as.exe" -IG:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin  --defsym COMPILE_ARM=1 --defsym PLATFORM_ARM_MC9328=1 --defsym PLATFORM_ARM_iMXS=1 --defsym TARGETLOCATION_FLASH=1   -mfloat-abi=soft   -mcpu=arm920t -mlittle-endian  --defsym BUILD_RTM=0      -mfloat-abi=soft   -mcpu=arm920t -mlittle-endian  -a=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\tinyclr_dat.txt -o G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\tinyclr_dat.obj GNU_S\tinyclr_dat.s
  ========== Database file content:
  G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\MetaDataProcessor.exe -dump_dat G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.dat
  Assembly 1: mscorlib (4.3.0.0), size: 41324
  
  Assembly 2: Microsoft.SPOT.Native (4.3.0.0), size: 7468
  
     Assembly: mscorlib (4.3.0.0)     Assembly: Microsoft.SPOT.Native (4.3.0.0)     Assembly: Microsoft.SPOT.Hardware (4.3.0.0)  
  Assembly 3: Microsoft.SPOT.Hardware (4.3.0.0), size: 14288
  
  Assembly 4: Microsoft.SPOT.Security.PKCS11 (4.3.0.0), size: 11792
  
     Assembly: Microsoft.SPOT.Security.PKCS11 (4.3.0.0)     Assembly: System.Security (4.3.0.0)  
  Assembly 5: System.Security (4.3.0.0), size: 19732
  
  Assembly 6: Microsoft.SPOT.Hardware.Usb (4.3.0.0), size: 3740
  
     Assembly: Microsoft.SPOT.Hardware.Usb (4.3.0.0)     Assembly: Microsoft.SPOT.Graphics (4.3.0.0)  
  Assembly 7: Microsoft.SPOT.Graphics (4.3.0.0), size: 2268
  
  Assembly 8: Microsoft.SPOT.TinyCore (4.3.0.0), size: 61168
  
     Assembly: Microsoft.SPOT.TinyCore (4.3.0.0)     Assembly: Microsoft.SPOT.Touch (4.3.0.0)  
     Assembly: Microsoft.SPOT.Hardware.SerialPort (4.3.0.0)     Assembly: Microsoft.SPOT.Hardware.OneWire (4.3.0.0)  
  Assembly 9: Microsoft.SPOT.Touch (4.3.0.0), size: 4556
  
  Assembly 10: Microsoft.SPOT.Hardware.SerialPort (4.3.0.0), size: 3608
  
  Assembly 11: Microsoft.SPOT.Hardware.OneWire (4.3.0.0), size: 732
  
  Assembly 12: System.Xml (4.3.0.0), size: 6552
  
  Assembly 13: Microsoft.SPOT.Ink (4.3.0.0), size: 2072
  
  ========== End of Database file content
  ***************************************************************************************************
  copy /BVY G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.dat G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.dat.fromlastbuildrun
          1 個のファイルをコピーしました。
  del  /Q /F G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.dat
BuildScatterfile:
すべての出力ファイルが入力ファイルに対して最新なので、ターゲット "BuildScatterfile" を省略します。
BuildAXF:
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\ld.exe"  -static --gc-sections --no-warn-mismatch --library-path=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\lib --library-path=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib   -u ARM_Vectors -u _start --Map G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.map --output=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf --script=G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr_scatterfile.ldf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\tinyclr_dat.obj G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\allocator.obj G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\obj\Solutions\iMXS\TinyCLR\tinyclr.obj -( G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SecurityPkcs11.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Core.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Hardware.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\InterruptHandler.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\HeapPersistence.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\I2C.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\IOPort.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\RPC_stub.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Serialization.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Xml.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Debugger.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Debugger_full.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Diagnostics.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Graphics_Bmp.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Graphics.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Graphics_Gif.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Graphics_Jpeg.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\CorLib.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT_Serialization.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT_Graphics.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT_Hardware.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT_Hardware_SerialPort.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT_Hardware_Usb.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT_Touch.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\System_Xml.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\Messaging.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\CLRStartup.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\CRC.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\WireProtocol.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT_Messaging_stub.lib G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\ANY_MEDIA\release\lib\SPOT_Hardware_OneWire.lib MyFirstLibrary.lib MFUpdate_PAL_stub.lib Crypto_Config_iMXS.lib PKCS11_Engine.lib openssl_pal_stubs.lib ssl_types.lib crypto_openssl.lib aes_openssl.lib asn1_openssl.lib asn1pt2_openssl.lib bf_openssl.lib bio_openssl.lib buffer_openssl.lib bn_openssl.lib cast_openssl.lib comp_openssl.lib conf_openssl.lib des_openssl.lib dh_openssl.lib dsa_openssl.lib dso_openssl.lib ecdh_openssl.lib ec_openssl.lib ecdsa_openssl.lib engine_openssl.lib err_openssl.lib evp_openssl.lib hmac_openssl.lib lhash_openssl.lib md2_openssl.lib md4_openssl.lib md5_openssl.lib modes_openssl.lib ocsp_openssl.lib objects_openssl.lib pem_openssl.lib pkcs7_openssl.lib pkcs12_openssl.lib pqueue_openssl.lib rand_openssl.lib rc2_openssl.lib rc4_openssl.lib ripemd_openssl.lib rsa_openssl.lib seed_openssl.lib sha_openssl.lib stack_openssl.lib ts_openssl.lib txt_db_openssl.lib ui_openssl.lib whrlpool_openssl.lib x509_openssl.lib x509v3_openssl.lib SimpleStorage_PAL.lib OpenSSL_PKCS11_Crypto.lib LargeBuffer_hal_stubs.lib VirtualKey_iMXS.lib TouchPanel_pal.lib Watchdog_pal.lib palevent_pal.lib Gesture_pal.lib Ink_pal.lib Time_pal.lib GlobalLock_hal.lib TinyHal.lib MC9328MXL_PreStackInit.lib ARM9_bootstrap.lib ARM9_cache.lib ARM9_mmu.lib spi_backlight.lib SPI_Backlight_Config_iMXS.lib batterycharger_hal_stubs.lib batterymeasurement_hal_stubs.lib I28F_16BL.lib I28F640J3_blconfig_iMXS.lib A025DL02.lib A025DL02_Config_iMXS.lib Display_Font8x8.lib TSC2046.lib TSC2046_Config_iMXS.lib system_initialization_hal.lib asyncproccall_pal.lib blockstorage_pal.lib BlockStorage_AddDevices_iMXS.lib Buttons_pal.lib COM_pal.lib DebuggerPort_SSL_config_stubs.lib i2c_pal.lib MC9328MXL_I2C.lib sockets_pal_stubs.lib usart_pal.lib usb_pal.lib usb_pal_config_iMXS.lib config_pal.lib fs_pal_stubs.lib FS_Config_stubs.lib events_pal.lib graphics_pal.lib heap_pal.lib piezo_pal_stubs.lib SimpleHeap.lib SimpleHeap_config.lib tinycrt_pal.lib MC9328MXL_bootstrap.lib MC9328MXL_cache.lib MC9328MXL_CMU.lib MC9328MXL_DMA.lib MC9328MXL_EBIU.lib MC9328MXL_GPIO.lib MC9328MXL_INTC.lib MC9328MXL_LCD.lib MC9328MXL_Power.lib MC9328MXL_Security.lib MC9328MXL_SPI.lib MC9328MXL_timer.lib MC9328MXL_time.lib MC9328MXL_USART.lib MC9328MXL_USB.lib MC9328MXL_Watchdog.lib LCDController_Config_iMXS.lib TimeService_pal_stubs.lib cpu_DA_stubs.lib cpu_pwm_stubs.lib cpu_analog_stubs.lib OneWire_pal.lib MC9328MXL_PerformanceCounter.lib native_double_pal.lib MyFirstLibrary.lib  G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\lib\InteropAssembliesTable.lib -) -( "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\arm-none-eabi\lib\libm.a" "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\arm-none-eabi\lib\libc.a" "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\lib\gcc\arm-none-eabi\4.8.3\libgcc.a" -) -(  -)
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objdump.exe" -d -EL G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf > G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axfdump
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_FLASH -j ER_IRAM_TC -j ER_FLASH_CONT -j ER_RAM_RO -j ER_RAM_RW  -O binary G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.bin\ER_FLASH
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_DAT                                                                                     -O binary G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.bin\ER_DAT
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_CONFIG                                                                                  -O binary G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.bin\ER_CONFIG
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_FLASH -j ER_IRAM_TC -j ER_FLASH_CONT -j ER_RAM_RO -j ER_RAM_RW  -j ER_IRAM -O srec --gap-fill 0 --srec-forceS3  G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.hex\ER_FLASH
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_DAT                                                                                                -O srec              --srec-forceS3  G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.hex\ER_DAT
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_CONFIG                                                                                             -O srec              --srec-forceS3  G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.hex\ER_CONFIG
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\objcopy.exe" -S -j ER_IFLASH                                                                                             -O srec              --srec-forceS3  G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.hex\ER_IFLASH
  "D:\Users\v050493\MentorGraphics\Sourcery_CodeBench_Lite_for_ARM_EABI\bin\..\arm-none-eabi\bin\nm.exe" G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.axf >> G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.dump
  G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\CreateSymdef.exe     G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.dump G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.symdefs
  Done !
  G:\MicroFrameworkPK_v4_3\BuildOutput\public\Release\Server\dll\BuildHelper -hashBuild G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.bin\ER_FLASH G:\MicroFrameworkPK_v4_3\BuildOutput\ARM\GCC4.8\le\FLASH\release\iMXS\bin\tinyclr.symdefs
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\TinyCLR\TinyCLR.proj" (Build ターゲット) のビルドが完了しました。
プロジェクト "G:\MicroFrameworkPK_v4_3\Solutions\iMXS\dotNetMF.proj" (build ターゲット) のビルドが完了しました。

ビルドに成功しました。
    0 個の警告
    0 エラー

経過時間 00:01:07.47
